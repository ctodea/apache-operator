---
### config
- name: create html configmap
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: '{{ ansible_operator_meta.name }}-apache-html'
        namespace: '{{ ansible_operator_meta.namespace }}'
        labels:
          app: apache
          conf: html
      data:
        index.html: '{{ index_html }}' # key will define file name

- name: create httpd.conf configmap
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: '{{ ansible_operator_meta.name }}-apache-conf'
        namespace: '{{ ansible_operator_meta.namespace }}'
        labels:
          app: apache
          conf: httpdconf
      data:
        httpd.conf: '{{ rendered_template }}'
  vars:
    rendered_template: "{{ lookup('template', './httpd.conf.j2') }}"
  register: result

### workload
- name: start apache
  community.kubernetes.k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: '{{ ansible_operator_meta.name }}-apache'
        namespace: '{{ ansible_operator_meta.namespace }}'
        labels:
          app: apache
      spec:
        replicas: '{{ size }}'
        selector:
          matchLabels:
            app: apache
        template:
          metadata:
            labels:
              app: apache
            annotations:
              configHash: "" # we will store the hash of the configmap here
          spec:
            initContainers:
              - name: httpdconf
                image: busybox
                command: ["sh", "-c", "cp /conf/httpd.conf /httpd-conf/"]
                volumeMounts:
                - name: confmap
                  mountPath: "/conf"
                - name: confdir
                  mountPath: "/httpd-conf"
            containers:
              - name: apache
                image: "rhscl/httpd-24-rhel7"
                ports:
                  - containerPort: '{{ apache_port }}' 
                volumeMounts:
                  - name: html
                    mountPath: "/var/www/html/"
                    readOnly: true
                  - name: confdir
                    mountPath: "/etc/httpd/conf/"
                    readOnly: false # apache writes some stuff on /etc/httpd/conf
                # envFrom:
                # # The ConfigMap we want to use
                # - configMapRef:
                #     name: confmap
                # Extra-curricular: We can make the hash of our ConfigMap available at a
                # (e.g.) debug endpoint via a fieldRef
                # env:
                #   - name: CONFIG_HASH
                #     valueFrom:
                #       fieldRef:
                #         fieldPath: spec.template.metadata.annotations.configHash
            volumes:
              - name: confdir
                defaultMode: 0666
                emptyDir: {}
              - name: html
                configMap:
                  name: '{{ ansible_operator_meta.name }}-apache-html' # name of the html configmap
              - name: confmap
                configMap:
                  name: '{{ ansible_operator_meta.name }}-apache-conf' # name of the conf configmap
  tags: 
  - deployment
                    
### networking
- name: create service
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: '{{ ansible_operator_meta.name }}-apache'
        namespace: '{{ ansible_operator_meta.namespace }}'
        labels:
          app: apache
      spec:
        selector:
          app: apache
        ports:
          - protocol: TCP
            port: 80
            targetPort: '{{ apache_port }}'
  tags: 
    - service
                
- name: create route
  community.kubernetes.k8s:
    definition:
      kind: Route
      apiVersion: route.openshift.io/v1
      metadata:
        name: '{{ ansible_operator_meta.name }}-apache'
        namespace: '{{ ansible_operator_meta.namespace }}'
      spec:
        host: '{{ route_name }}-apache-operator-system.apps-crc.testing' # default: <route-name>[-<namespace>].<suffix> explicitly define so it can be changed later, this line could be ommited
        to:
          kind: Service
          name: '{{ ansible_operator_meta.name }}-apache'
        # route could be secured further...
        # tls:
        #   termination: edge            
        #   insecureEdgeTerminationPolicy: Allow | Redirect
        #   key: |-                      
        #     -----BEGIN PRIVATE KEY-----
        #     [...]
        #     -----END PRIVATE KEY-----
        #   certificate: |-              
        #     -----BEGIN CERTIFICATE-----
        #     [...]
        #     -----END CERTIFICATE-----
        #   caCertificate: |-            
        #     -----BEGIN CERTIFICATE-----
        #     [...]
        #     -----END CERTIFICATE-----
  tags:
    - route 

# - name: get configmap hash
#   community.kubernetes.k8s_info:
#     kind: ConfigMap
#     name: '{{ ansible_operator_meta.name }}-apache'
#     namespace: '{{ ansible_operator_meta.namespace }}'
#   register: configmap
#   tags:
#     - configmap_hash

- copy: content="{{ result }}" dest=/opt/ansible/configmap


  

    
  

